==23102== Memcheck, a memory error detector
==23102== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==23102== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==23102== Command: /mnt/c/Users/ayaha/Desktop/project/QuashBash/quash/quash
==23102== 
==23102== error calling PR_SET_PTRACER, vgdb might block
==23131== error calling PR_SET_PTRACER, vgdb might block
==23135== error calling PR_SET_PTRACER, vgdb might block
==23135== 
==23135== HEAP SUMMARY:
==23135==     in use at exit: 165 bytes in 5 blocks
==23135==   total heap usage: 24 allocs, 19 frees, 31,355 bytes allocated
==23135== 
==23135== LEAK SUMMARY:
==23135==    definitely lost: 0 bytes in 0 blocks
==23135==    indirectly lost: 0 bytes in 0 blocks
==23135==      possibly lost: 0 bytes in 0 blocks
==23135==    still reachable: 165 bytes in 5 blocks
==23135==         suppressed: 0 bytes in 0 blocks
==23135== Reachable blocks (those to which a pointer was found) are not shown.
==23135== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==23135== 
==23135== For counts of detected and suppressed errors, rerun with: -v
==23135== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==23142== Conditional jump or move depends on uninitialised value(s)
==23142==    at 0x10C4A8: run_echo (execute.c:229)
==23142==    by 0x10C876: child_run_command (execute.c:365)
==23142==    by 0x10CB96: create_process (execute.c:496)
==23142==    by 0x10CDB7: run_script (execute.c:547)
==23142==    by 0x109A5E: main (quash.c:132)
==23142==  Uninitialised value was created by a heap allocation
==23142==    at 0x4C2FB0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==23142==    by 0x10E111: __initialize_memory_pool (memory_pool.c:44)
==23142==    by 0x10E2BB: initialize_memory_pool (memory_pool.c:89)
==23142==    by 0x109A3B: main (quash.c:128)
==23142== 
==23142== 
==23142== HEAP SUMMARY:
==23142==     in use at exit: 151 bytes in 3 blocks
==23142==   total heap usage: 34 allocs, 31 frees, 35,274 bytes allocated
==23142== 
==23142== LEAK SUMMARY:
==23142==    definitely lost: 0 bytes in 0 blocks
==23142==    indirectly lost: 0 bytes in 0 blocks
==23142==      possibly lost: 0 bytes in 0 blocks
==23142==    still reachable: 151 bytes in 3 blocks
==23142==         suppressed: 0 bytes in 0 blocks
==23142== Reachable blocks (those to which a pointer was found) are not shown.
==23142== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==23142== 
==23142== For counts of detected and suppressed errors, rerun with: -v
==23142== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==23102== 
==23102== HEAP SUMMARY:
==23102==     in use at exit: 112 bytes in 1 blocks
==23102==   total heap usage: 45 allocs, 44 frees, 39,175 bytes allocated
==23102== 
==23102== LEAK SUMMARY:
==23102==    definitely lost: 0 bytes in 0 blocks
==23102==    indirectly lost: 0 bytes in 0 blocks
==23102==      possibly lost: 0 bytes in 0 blocks
==23102==    still reachable: 112 bytes in 1 blocks
==23102==         suppressed: 0 bytes in 0 blocks
==23102== Reachable blocks (those to which a pointer was found) are not shown.
==23102== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==23102== 
==23102== For counts of detected and suppressed errors, rerun with: -v
==23102== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
